"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[989],{1375:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>d});const c=JSON.parse('{"id":"seq-db/internal/frac-cache","title":"Fraction Cache (.frac-cache)","description":"Fractions, types of fractions","source":"@site/docs/seq-db/internal/frac-cache.md","sourceDirName":"seq-db/internal","slug":"/seq-db/internal/frac-cache","permalink":"/seq-db-docs/seq-db/internal/frac-cache","draft":false,"unlisted":false,"editUrl":"https://github.com/ozontech/seq-db/tree/main/website/docs/docs/seq-db/internal/frac-cache.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Format of Index File of Sealed Fraction","permalink":"/seq-db-docs/seq-db/internal/format-index-file"},"next":{"title":"Factions","permalink":"/seq-db-docs/seq-db/internal/fractions"}}');var a=t(4848),s=t(8453);const i={},r="Fraction Cache (.frac-cache)",o={},d=[{value:"Fractions, types of fractions",id:"fractions-types-of-fractions",level:2},{value:"Fraction cache for sealed fractions",id:"fraction-cache-for-sealed-fractions",level:2}];function l(e){const n={br:"br",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsxs)(n.h1,{id:"fraction-cache-frac-cache",children:["Fraction Cache (",(0,a.jsx)(n.code,{children:".frac-cache"}),")"]})}),"\n",(0,a.jsx)(n.h2,{id:"fractions-types-of-fractions",children:"Fractions, types of fractions"}),"\n",(0,a.jsxs)(n.p,{children:["SeqDB stores the indexed data in special structures named ",(0,a.jsx)(n.em,{children:"fractions"}),", each fraction is represented by two files on disk."]}),"\n",(0,a.jsxs)(n.p,{children:["A fraction that is currently being written to is called an ",(0,a.jsx)(n.strong,{children:"active fraction"}),".",(0,a.jsx)(n.br,{}),"\n","A ",(0,a.jsx)(n.strong,{children:"sealed fraction"})," is a read-only fraction, that is not going to be modified by the database in any kind. A sealed fraction is only going to be read from."]}),"\n",(0,a.jsxs)(n.p,{children:["When an ",(0,a.jsx)(n.em,{children:"active"})," fraction reaches a certain size (configured by the ",(0,a.jsx)(n.code,{children:"frac-size"})," flag), the ",(0,a.jsx)(n.em,{children:"active"})," fraction is turned into a ",(0,a.jsx)(n.em,{children:"sealed"})," one, this process is named ",(0,a.jsx)(n.strong,{children:"sealing"}),". The database must have ",(0,a.jsx)(n.strong,{children:"only one active fraction"})," at any given time. (TBD link to sealing)"]}),"\n",(0,a.jsxs)(n.p,{children:["Both sealed and active fractions have the following ",(0,a.jsx)(n.em,{children:"metadata"}),":"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"Name"}),"  - fraction name"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"DocsTotal"})," - size of compressed docs stored on disk"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"DocsRaw"})," - size of raw docs stored on disk"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"MetaOnDisk"}),"/",(0,a.jsx)(n.code,{children:"IndexOnDisk"})," - size of compressed index/meta data stored on disk"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"From"})," - the earliest document timestamp in fraction"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"To"})," - the latest document timestamp in fraction"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"CreationTime"})," - the time at which the fraction has been created"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Please refer to the ",(0,a.jsx)(n.code,{children:"Info"})," structure in the ",(0,a.jsx)(n.code,{children:"fraction.go"})," file for more info on fraction metadata."]}),"\n",(0,a.jsx)(n.h2,{id:"fraction-cache-for-sealed-fractions",children:"Fraction cache for sealed fractions"}),"\n",(0,a.jsxs)(n.p,{children:["SeqDB has a structure named ",(0,a.jsx)(n.strong,{children:"sealed fraction cache"})," containing sealed fractions metadata. This structure is stored in-memory and dumped to the disk each time a new fraction is sealed.\nThe file that stores the dumped fraction cache is called ",(0,a.jsx)(n.code,{children:".frac-cache"}),", and is a JSON-marshaled list of sealed fraction metadata."]}),"\n",(0,a.jsxs)(n.p,{children:["In case of a restart/failure, the ",(0,a.jsx)(n.code,{children:".frac-cache"})," file is read, copied to the in-memory fraction cache structure, given that the fraction cache file is valid. A successful on-disk fraction cache load means we can skip fraction directory scanning & sealed fraction metadata reading."]}),"\n",(0,a.jsxs)(n.p,{children:["Note that in case of an invalid loaded fraction cache file, the metadata from the stored sealed fractions will be read once and the broken ",(0,a.jsx)(n.code,{children:".frac-cache"})," file will be updated. The ",(0,a.jsx)(n.code,{children:".frac-cache"})," file ",(0,a.jsx)(n.strong,{children:"must"})," only be edited by SeqDB, modifications made by any other user/program may screw things up."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>r});var c=t(6540);const a={},s=c.createContext(a);function i(e){const n=c.useContext(s);return c.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),c.createElement(s.Provider,{value:n},e.children)}}}]);