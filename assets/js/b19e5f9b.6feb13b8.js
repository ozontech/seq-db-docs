"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[934],{5315:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"seq-db/quickstart","title":"Quickstart","description":"Welcome to the seq-db quickstart guide! In just a few minutes, you\'ll learn how to:","source":"@site/docs/seq-db/01-quickstart.md","sourceDirName":"seq-db","slug":"/","permalink":"/seq-db-docs/","draft":false,"unlisted":false,"editUrl":"https://github.com/ozontech/seq-db/tree/main/website/docs/docs/seq-db/01-quickstart.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"quickstart","slug":"/"},"sidebar":"docs","next":{"title":"Flags","permalink":"/seq-db-docs/seq-db/flags"}}');var r=n(4848),d=n(8453);const i={id:"quickstart",slug:"/"},o="Quickstart",a={},c=[{value:"Running seq-db",id:"running-seq-db",level:2},{value:"Single node mode",id:"single-node-mode",level:3},{value:"Cluster mode",id:"cluster-mode",level:3},{value:"Write documents to seq-db",id:"write-documents-to-seq-db",level:2},{value:"Writing documents using <code>curl</code>",id:"writing-documents-using-curl",level:3},{value:"Search for documents",id:"search-for-documents",level:2},{value:"What&#39;s next",id:"whats-next",level:2}];function l(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"quickstart",children:"Quickstart"})}),"\n",(0,r.jsx)(s.p,{children:"Welcome to the seq-db quickstart guide! In just a few minutes, you'll learn how to:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Quickly spin up a seq-db instance"}),"\n",(0,r.jsx)(s.li,{children:"Write and store sample log messages"}),"\n",(0,r.jsx)(s.li,{children:"Query and retrieve messages using search filters"}),"\n"]}),"\n",(0,r.jsx)(s.h2,{id:"running-seq-db",children:"Running seq-db"}),"\n",(0,r.jsx)(s.h3,{id:"single-node-mode",children:"Single node mode"}),"\n",(0,r.jsx)(s.p,{children:"seq-db can be quickly launched in a docker container. Pull seq-db image from Docker hub and create a container:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"docker run --rm \\\n  -p 9002:9002 \\ # Default HTTP port\n  -p 9004:9004 \\ # Default gRPC port\n  -p 9200:9200 \\ # Default debug port\n  -it ghcr.io/ozontech/seq-db:latest --mapping auto --mode single\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Note that in this example we use a default mapping file (built into the docker image) as seq-db doesn't index any fields by default.\nThe example uses the ",(0,r.jsx)(s.code,{children:"--mode single"})," flag to run both seq-db in a single binary, rather than in cluster mode and ",(0,r.jsx)(s.code,{children:"--mapping auto"})," to index all fields as ",(0,r.jsx)(s.code,{children:"keyword"}),"."]}),"\n",(0,r.jsx)(s.h3,{id:"cluster-mode",children:"Cluster mode"}),"\n",(0,r.jsxs)(s.p,{children:["seq-db can be launched in a cluster mode, two main components are ",(0,r.jsx)(s.code,{children:"seq-db-proxy"})," and ",(0,r.jsx)(s.code,{children:"seq-db-store"}),": ",(0,r.jsx)(s.code,{children:"seq-db-proxy"})," proxies requests to configured stores and ",(0,r.jsx)(s.code,{children:"seq-db-store"})," actually stores the data."]}),"\n",(0,r.jsxs)(s.p,{children:["Use ",(0,r.jsx)(s.code,{children:"--mode"})," flag to select specific mode: ",(0,r.jsx)(s.code,{children:"ingestor"})," or ",(0,r.jsx)(s.code,{children:"store"}),"."]}),"\n",(0,r.jsx)(s.p,{children:"Here is the minimal docker compose example:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-yaml",children:'services:\n  \n  seq-db-proxy:\n    image: ghcr.io/ozontech/seq-db:latest\n    ports:\n      - "9002:9002" # Default HTTP port\n      - "9004:9004" # Default gRPC port\n      - "9200:9200" # Default debug port\n    command: --mode ingestor\n      --mapping=auto\n      --hot-stores=seq-db-store:9002\n    depends_on:\n      - seq-db-store\n  \n  seq-db-store:\n    image: ghcr.io/ozontech/seq-db:latest\n    command: --mode store\n      --mapping=auto\n      --data-dir=/seq-db-data\n'})}),"\n",(0,r.jsxs)(s.p,{children:["Read ",(0,r.jsx)(s.a,{href:"/seq-db-docs/seq-db/flags#clustering-flags",children:"clustering flags"})," and ",(0,r.jsx)(s.a,{href:"/seq-db-docs/seq-db/long-term-store",children:"long term store"})," for more info about possible configurations."]}),"\n",(0,r.jsxs)(s.p,{children:["Be aware that we set ",(0,r.jsx)(s.code,{children:"--mapping"})," to ",(0,r.jsx)(s.code,{children:"auto"})," for easier quickstart but this option is not production friendly.\nSo we encourage you to read more about ",(0,r.jsx)(s.a,{href:"/seq-db-docs/seq-db/index-types",children:"mappings and how we index fields"})," and seq-db architecture and operating modes (single/cluster)."]}),"\n",(0,r.jsx)(s.h2,{id:"write-documents-to-seq-db",children:"Write documents to seq-db"}),"\n",(0,r.jsxs)(s.h3,{id:"writing-documents-using-curl",children:["Writing documents using ",(0,r.jsx)(s.code,{children:"curl"})]}),"\n",(0,r.jsxs)(s.p,{children:["seq-db supports elasticsearch ",(0,r.jsx)(s.code,{children:"bulk"})," API, so, given a seq-db single instance is listening on port 9002,\na single document can be added like this:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:'curl --request POST \\\n  --url http://localhost:9002/_bulk \\\n  --header \'Content-Type: application/json\' \\\n  --data \'{"index" : {"unused-key":""}}\n{"k8s_pod": "app-backend-123", "k8s_namespace": "production", "k8s_container": "app-backend", "request": "POST", "request_uri": "/api/v1/orders", "message": "New order created successfully"}\n{"index" : {"unused-key":""}}\n{"k8s_pod": "app-frontend-456", "k8s_namespace": "production", "k8s_container": "app-frontend", "request": "GET", "request_uri": "/api/v1/products", "message": "Product list retrieved"}\n{"index" : {"unused-key":""}}\n{"k8s_pod": "payment-service-789", "k8s_namespace": "production", "k8s_container": "payment-service", "request": "POST", "request_uri": "/api/v1/payments", "message": "Payment processing failed: insufficient funds"}\n\'\n'})}),"\n",(0,r.jsx)(s.h2,{id:"search-for-documents",children:"Search for documents"}),"\n",(0,r.jsxs)(s.p,{children:["We'll wrap up this guide with a simple search query\nthat filters the ingested logs by the ",(0,r.jsx)(s.code,{children:"message"})," field."]}),"\n",(0,r.jsxs)(s.p,{children:["Note: make sure ",(0,r.jsx)(s.code,{children:"curl"})," and ",(0,r.jsx)(s.code,{children:"jq"})," are installed to run this example."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:'curl --request POST   \\\n  --url http://localhost:9002/search \\\n  --header \'Content-Type: application/json\' \\\n  --header \'Grpc-Metadata-use-seq-ql: true\' \\\n  --data-binary @- <<EOF | jq .\n  {\n    "query":{\n      "query":"message: failed",\n      "from": "2025-02-11T10:30:00Z",\n      "to": "2030-11-25T17:50:30Z"\n    },\n    "size": 100,\n    "offset": 0\n  }\nEOF\n'})}),"\n",(0,r.jsx)(s.h2,{id:"whats-next",children:"What's next"}),"\n",(0,r.jsx)(s.p,{children:"seq-db offers many more useful features for working with logs. Here's a couple:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["A custom query language - ",(0,r.jsx)(s.a,{href:"/seq-db-docs/seq-db/seq-ql",children:"seq-ql"})," - that supports pipes, range queries, wildcards and more."]}),"\n",(0,r.jsx)(s.li,{children:"Built-in support for various types of aggregations: sum, avg, quantiles etc. TODO add aggregation doc?"}),"\n",(0,r.jsx)(s.li,{children:"The ability to combine multiple aggregations into a single request using complex-search TODO add link"}),"\n",(0,r.jsxs)(s.li,{children:["Document-ID based retrieval can be ",(0,r.jsx)(s.a,{href:"/seq-db-docs/seq-db/public-api#fetch",children:"fetched"})]}),"\n"]})]})}function u(e={}){const{wrapper:s}={...(0,d.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>o});var t=n(6540);const r={},d=t.createContext(r);function i(e){const s=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(d.Provider,{value:s},e.children)}}}]);